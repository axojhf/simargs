#+TITLE: SimArgs
#+DATE: 2022-12-07T22:56:41+0800
#+LASTMOD: 2022-12-07T22:56:41+0800
#+AUTHOR: Jiacai Liu
#+EMAIL: dev@liujiacai.net
#+OPTIONS: toc:nil num:nil
#+STARTUP: content

[[https://github.com/jiacai2050/simargs/actions/workflows/CI.yml][https://github.com/jiacai2050/simargs/actions/workflows/CI.yml/badge.svg]]

A simple, opinionated, struct-based argument parser in Zig.

* Usage
See [[file:demo.zig]]

#+begin_src bash :results verbatim :exports both
# Run demo
zig build && ./zig-out/bin/demo --output /tmp/a.out hello world 2>&1
#+end_src

#+RESULTS:
#+begin_example
info: Program: ./zig-out/bin/demo
info: Arguments:-----------------
info: option name:verbose, value:null
info: option name:user-agent, value:null
info: option name:timeout, value:null
info: option name:output, value:{ 47, 116, 109, 112, 47, 97, 46, 111, 117, 116 }
info: Positional arguments: -----------------
info: hello
info: world
info: A print_help() method is provided-----------------
 USAGE:
     ./zig-out/bin/demo [OPTIONS] ...

 OPTIONS:
	-v, --verbose            Make the operation more talkative
	-A, --user-agent
	    --timeout            Max time this request can cost
	-o, --output             Write to file instead of stdout
#+end_example

* Acknowledgment
When implement =simargs=, I refer following projects to learn how to write
idiomatic Zig code. Big Thanks!
- [[https://github.com/MasterQ32/zig-args/][MasterQ32/zig-args]]
- [[https://github.com/Hejsil/zig-clap][Hejsil/zig-clap]]
- [[https://github.com/evangrayk/zig-argparse][evangrayk/zig-argparse]]
